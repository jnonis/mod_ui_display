/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void onPlayClick(GButton source, GEvent event) { //_CODE_:playbutton:500475:
  println("playbutton - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:playbutton:500475:

public void onSettingsClick(GButton source, GEvent event) { //_CODE_:settings:906995:
  println("settings - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:settings:906995:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.SCHEME_15);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  playbutton = new GButton(this, 210, 420, 100, 48);
  playbutton.setText("Play");
  playbutton.setTextBold();
  playbutton.addEventHandler(this, "onPlayClick");
  tempo = new GLabel(this, 120, 420, 80, 48);
  tempo.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  tempo.setText("120 BPM");
  tempo.setTextBold();
  tempo.setOpaque(true);
  settings = new GButton(this, 10, 420, 100, 48);
  settings.setText("Settings");
  settings.setTextBold();
  settings.addEventHandler(this, "onSettingsClick");
}

// Variable declarations 
// autogenerated do not edit
GButton playbutton; 
GLabel tempo; 
GButton settings; 
